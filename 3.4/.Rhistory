customers <- read.csv("customers.csv")
View(customers)
customers <- read.csv("customers.csv")
View(customers)
formula <- Home.Ownership ~ Age + Education.Level + Gender + Marital.Status;
data <- read.csv("customers.csv")
formula <- Home.Ownership ~ Age + Education.Level + Gender + Marital.Status;
total <- nrow(data)
index <- sample(1:total, total*0.7)
data.train <- data[index, ]
data.test <- data[-index, ]
data.train.glm = glm(
formula = formula,
data = data,
family=binomial(link="logit"),
control = list(maxit = 100)
)
table(data$Home.Ownership)
data.test.predict <- predict(data.train.glm, newdata = data.test, type='response')
data.test.predict <- ifelse(data.test.predict>0.5, "Own", "Rent")
table(data.test$Home.Ownership, data.test.predict)
data.test.predict <- predict(data.train.glm, newdata = data.test, type='response')
data.test.predict <- ifelse(data.test.predict>0.5, "Rent", "Own")
table(data.test$Home.Ownership, data.test.predict)
data.train.glm
formula <- Home.Ownership ~ Education.Level + Gender + Marital.Status;
table(data$Home.Ownership)
total <- nrow(data)
index <- sample(1:total, total*0.7)
data.train <- data[index, ]
data.test <- data[-index, ]
data.train.glm = glm(
formula = formula,
data = data,
family=binomial(link="logit"),
control = list(maxit = 100)
)
data.test.predict <- predict(data.train.glm, newdata = data.test, type='response')
data.test.predict <- ifelse(data.test.predict>0.5, "Rent", "Own")
table(data.test$Home.Ownership, data.test.predict)
data.train.glm
View(data.train)
table(data$Education.Level)
table(data$Education.Level, useNA = TRUE)
table(data$Education.Level)
table(data$Gender)
table(Marital.Status)
table(data$Marital.Status)
data <- data[data$Gender=='NULL',]
data <- read.csv("customers.csv")
data <- data[data$Gender!='NULL' & data$Marital.Status!='NULL',]
formula <- Home.Ownership ~ Education.Level + Gender + Marital.Status;
table(data$Marital.Status)
total <- nrow(data)
index <- sample(1:total, total*0.7)
data.train <- data[index, ]
data.test <- data[-index, ]
data.train.glm = glm(
formula = formula,
data = data,
family=binomial(link="logit"),
control = list(maxit = 100)
)
data.test.predict <- predict(data.train.glm, newdata = data.test, type='response')
data.test.predict <- ifelse(data.test.predict>0.5, "Rent", "Own")
table(data.test$Home.Ownership, data.test.predict)
table(data$Home.Ownership)
data.train.predict <- predict(data.train.glm, newdata = data.train, type='response')
table(data.train.predict$Home.Ownership, data.train.predict)
table(data.train$Home.Ownership, data.train.predict)
data.train.predict <- ifelse(data.train.predict>0.5, "Rent", "Own")
table(data.train$Home.Ownership, data.train.predict)
data.train.glm = glm(
formula = formula,
data = data,
family=binomial(link="logit")
)
data.test.predict <- predict(data.train.glm, newdata = data.test, type='response')
data.train.predict <- predict(data.train.glm, newdata = data.train, type='response')
data.test.predict <- ifelse(data.test.predict>0.5, "Rent", "Own")
data.train.predict <- ifelse(data.train.predict>0.5, "Rent", "Own")
table(data.test$Home.Ownership, data.test.predict)
table(data.train$Home.Ownership, data.train.predict)
cuse <- read.table("http://data.princeton.edu/wws509/datasets/cuse.dat", header=TRUE)
cuse
attach(cuse)
lrfit <- glm(
cbind(using, notUsing) ~ age + education + wantsMore,
family = binomial
)
lrfit
data <- read.csv("customers.csv")
data <- data[data$Gender!='NULL' & data$Marital.Status!='NULL',]
formula <- Home.Ownership ~ Education.Level + Gender + Marital.Status;
total <- nrow(data)
index <- sample(1:total, total*0.7)
data.train <- data[index, ]
data.test <- data[-index, ]
data.train.glm = glm(
formula = formula,
data = data,
family=binomial(link="logit")
)
data.test.predict <- predict(
data.train.glm,
newdata = data.test,
type='response',
levels=levels(data.test$Home.Ownership)
)
data.test.predict
data.test.predict <- ifelse(data.test.predict>0.5, "Rent", "Own")
table(data.test$Home.Ownership, data.test.predict)
data.test.predict <- predict(
data.train.glm,
newdata = data.test,
type='link',
levels=levels(data.test$Home.Ownership)
)
data.test.predict
data.test.predict <- predict(
data.train.glm,
newdata = data.test,
type='terms',
terms=levels(data.test$Home.Ownership)
)
data.test.predict <- predict(
data.train.glm,
newdata = data.test,
type='terms'
)
data.test.predict
terms
mtcars
cuse
cuse <- read.table("http://data.princeton.edu/wws509/datasets/cuse.dat", header=TRUE)
cuse
cbind(using, notUsing)
lrfit <- glm(
cbind(using, notUsing) ~ age + education + wantsMore,
family = binomial
)
lrfit
require(boot)
require(glmnet)
install.packages(glmnet)
install.packages("glmnet")
require(glmnet)
status <- c(0,0,0,0,0,1,1,1,1,1)
ymat   <- as.matrix(status)
xdata  <- data.frame(a,b)
ymat
xmat   <- as.matrix(xdata)
a = c(1,3,4,5,6,1,2,3,4,5);
b = c(4,2,3,6,2,1,3,4,5,6);
xdata  <- data.frame(a,b)
xmat   <- as.matrix(xdata)
fit.cv <- cv.glmnet(y = ymat, x = xmat, family="binomial")
lmin   <- fit.cv$lambda.min
l1se   <- fit.cv$lambda.1se
net    <- glmnet(y = ymat, x = xmat, family="binomial")
predict(net, s=lmin, type = "nonzero")
colnames(status)[predict(net, s=lmin,type="nonzero")$X1]
plot(cv.glmnet(y = ymat,x = xmat, family= "binomial", type = "class"))
plot(cv.glmnet(y = ymat,x = xmat, family= "binomial", type = "mae"))
plot(cv.glmnet(y = ymat,x = xmat, family= "binomial", type = "deviance"))
plot(cv.glmnet(y = ymat,x = xmat, family= "binomial", type = "mse"))
plot(cv.glmnet(y = ymat,x = xmat, family= "binomial", type = "auc")) #needs more data
data <- read.csv("customers.csv")
table(data$Gender)
table(data$Marital.Status)
data <- read.csv("customers.csv")
View(data)
data <- read.csv("customers.csv")
View(data)
table(data$Gender)
table(data$Marital.Status)
data <- data[data$Gender!='NULL' & data$Marital.Status!='NULL',]
data$Gender <- factor(data$Gender)
data$Marital.Status <- factor(data$Marital.Status)
modelData <- model.matrix(mmFormula, data)
mmFormula <- ~ Home.Ownership + Education.Level + Gender + Marital.Status;
modelData <- model.matrix(mmFormula, data)
View(modelData)
table(data$Home.Ownership)
View(data)
colnames(modelData)
View(modelData)
data <- modelData[, -1]
data <- as.data.frame(modelData[, -1])
View(data)
total <- nrow(data)
index <- sample(1:total, total*0.7)
data.train <- data[index, ]
data.test <- data[-index, ]
data.train.glm = glm(
formula = Home.OwnershipRent ~ .,
data = data.train,
family='binomial'
)
data.test.predict <- predict(
data.train.glm,
newdata = data.test,
type="response"
)
data.test.predict
data.test.predict <- ifelse(data.test.predict>0.5, "Rent", "Own")
data.test.predict
table(data.test$Home.Ownership, data.test.predict)
data <- read.csv("customers.csv")
data <- data[data$Gender!='NULL' & data$Marital.Status!='NULL',]
View(data)
data <- data[data$Gender!='NULL' & data$Marital.Status!='NULL',]
data <- data[, colnames(data)!='CustomerID']
formula <- Home.Ownership ~ .;
View(data)
total <- nrow(data)
index <- sample(1:total, total*0.7)
data.train <- data[index, ]
data.test <- data[-index, ]
data.train.glm = glm(
formula = formula,
data = data.train,
family='binomial'
)
data.train.glm
data.test.predict <- predict(
data.train.glm,
newdata = data.test,
type="response"
)
data.test.predict <- ifelse(data.test.predict>0.5, "Rent", "Own")
table(data.test$Home.Ownership, data.test.predict)
prop.table(table(data.test$Home.Ownership, data.test.predict), 1)
