kyphosis
library(rpart)
kyphosis
data <- read.csv("data.csv")
View(data)
View(data)
colnames(data)
fit <- rpart(CollegePlans ~ ., method="class", data=data)
printcp(fit) # display the results
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# plot tree
plot(fit, uniform=TRUE,
main="Classification Tree for Kyphosis")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
# create attractive postscript plot of tree
post(fit, file = "c:/tree.ps",
title = "Classification Tree for Kyphosis")
fit <- rpart(CollegePlans ~ ., data=data)
printcp(fit) # display the results
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# plot tree
plot(fit, uniform=TRUE,
main="Classification Tree for Kyphosis")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
# create attractive postscript plot of tree
fit <- rpart(formula=CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragement, data=data)
printcp(fit) # display the results
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# plot tree
plot(fit, uniform=TRUE,
main="Classification Tree for Kyphosis")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
# create attractive postscript plot of tree
post(fit, file = "c:/tree.ps",
title = "Classification Tree for Kyphosis")
fit <- rpart(
formula=CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragement,
parms = list(prior = c(.65,.35), split = "information"),
data=data
)
printcp(fit) # display the results
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# plot tree
plot(fit, uniform=TRUE,
main="Classification Tree for Kyphosis")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
# create attractive postscript plot of tree
post(fit, file = "c:/tree.ps",
title = "Classification Tree for Kyphosis")
plot(fit, uniform=TRUE, main="大学意向")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
fit <- rpart(
formula=CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragement,
parms = list(split = "information"),
data=data
)
printcp(fit) # display the results
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
View(data)
fit <- rpart(
formula=CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragement,
method="anova",
parms = list(split = "information"),
data=data
)
printcp(fit) # display the results
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# plot tree
plot(fit, uniform=TRUE, main="大学意向")
text(fit, use.n=TRUE, all=TRUE, cex=.8)
View(data)
View(data)
text(fit, use.n=TRUE, all=TRUE)
plot(fit, uniform=TRUE, main="大学意向")
text(fit, use.n=TRUE, all=TRUE)
text(fit)
plot(fit, uniform=TRUE, main="大学意向")
text(fit)
plot(fit)
text(fit)
library(party)
install.packages("party")
library(party)
data <- read.csv("data.csv")
ctree(formula, data=data)
formula=CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragement
ctree(formula, data=data)
CollegePlansTree <- ctree(formula, data=data)
plot(CollegePlansTree)
plot(CollegePlansTree, type="sample")
plot(CollegePlansTree, type="simple")
fit <- rpart(
formula=CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragement,
control = rpart.control(minsplit = 10),
data=data
)
printcp(fit) # display the results
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
# plot tree
plot(fit)
text(fit)
data$ParentIncome>67410
data[data$ParentIncome>67410, ]
data[data$ParentIncome>67410 & data$ParentEncouragement='Encouraged', ]
data[data$ParentIncome>67410 && data$ParentEncouragement='Encouraged', ]
data$ParentEncouragement='Encouraged'
;
data[data$ParentIncome>67410 && data$ParentEncouragement=='Encouraged', ]
data$ParentEncouragement=='Encouraged'
data[data$ParentIncome>67410 & data$ParentEncouragement=='Encouraged', ]
subData <- data[data$ParentIncome>67410 & data$ParentEncouragement=='Encouraged', ]
table(subData$CollegePlans)
subData$CollegePlans='Does not plan to attend'
subData[subData$CollegePlans=='Does not plan to attend',]
data <- read.csv("data.csv")
subData <- data[data$ParentIncome>67410 & data$ParentEncouragement=='Encouraged', ]
View(subData)
plot(CollegePlansTree)
total <- nrow(data)
data.train <- sample(1:total, total*0.7)
index <- sample(1:total, total*0.7)
data.train <- data[index, ]
data.test <- data[-index, ]
formula=CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragement
CollegePlansTree <- ctree(formula, data=data.train)
plot(CollegePlansTree, type="simple")
plot(CollegePlansTree, type="simple")
predict(CollegePlansTree, newdata = data.test)
data.test.predict <- predict(CollegePlansTree, newdata = data.test)
table(data.test$CollegePlans, data.test.predict)
#install.packages("party")library(party)data <- read.csv("data.csv")total <- nrow(data)index <- sample(1:total, total*0.7)data.train <- data[index, ]data.test <- data[-index, ]formula=CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragementCollegePlansTree <- ctree(formula, data=data.train)
data.test.predict <- predict(CollegePlansTree, newdata = data.test)
table(data.test$CollegePlans, data.test.predict)
table(data.train$CollegePlans)
table(data.test$CollegePlans)
prop.table(table(data.train$CollegePlans))
prop.table(table(data.test$CollegePlans))
prop.table(table(data$CollegePlans))
library(party)
install.packages("party")
library(party)
formula <- CollegePlans ~ Gender+ParentIncome+IQ+ParentEncouragement
CollegePlansTree <- ctree(formula, data=data)
data <- read.csv("data.csv")
CollegePlansTree <- ctree(formula, data=data)
plot(CollegePlansTree)
plot(CollegePlansTree, type="simple")
subData <- data[data$ParentIncome>67410 & data$ParentEncouragement=='Encouraged', ]
table(subData$CollegePlans)
prop.table(table(subData$CollegePlans))
total <- nrow(data)
index <- sample(1:total, total*0.7)
data.train <- data[index, ]
data.test <- data[-index, ]
CollegePlansTree <- ctree(formula, data=data.train)
data.test.predict <- predict(CollegePlansTree, newdata=data.test)
table(data.test$CollegePlans, data.test.predict)
prop.table(table(data.test$CollegePlans, data.test.predict))
prop.table(table(data.test$CollegePlans, data.test.predict), 1)
