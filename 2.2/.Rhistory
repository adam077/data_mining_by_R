library(Rwordseg)
library(tm)
docs <- Corpus(
DirSource(
c("SogouC.mini/Sample/C000007", "SogouC.mini/Sample/C000008")
),
readerControl = list(
language='UTF-8'
)
)
docs <- Corpus(
DirSource(
c(
"SogouC.mini/Sample/C000007", "SogouC.mini/Sample/C000008",
"SogouC.mini/Sample/C000010", "SogouC.mini/Sample/C000013",
"SogouC.mini/Sample/C000014", "SogouC.mini/Sample/C000016",
"SogouC.mini/Sample/C000020", "SogouC.mini/Sample/C000022",
"SogouC.mini/Sample/C000023", "SogouC.mini/Sample/C000024",
)
),
readerControl = list(
language='UTF-8'
)
)
docs <- Corpus(
DirSource(
c(
"SogouC.mini/Sample/C000007", "SogouC.mini/Sample/C000008",
"SogouC.mini/Sample/C000010", "SogouC.mini/Sample/C000013",
"SogouC.mini/Sample/C000014", "SogouC.mini/Sample/C000016",
"SogouC.mini/Sample/C000020", "SogouC.mini/Sample/C000022",
"SogouC.mini/Sample/C000023", "SogouC.mini/Sample/C000024"
)
),
readerControl = list(
language='UTF-8'
)
)
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, stripWhitespace)
docs <- tm_map(docs, content_transformer(SegmentCN), returnType="tm")
library(Rwordseg)
docs <- tm_map(docs, content_transformer(segmentCN), returnType="tm")
library(tmcn)
tdm <- TermDocumentMatrix(
docs,
control = list(
wordLengths= c(1, 4),
stopwords = stopwordsCN()
)
)
m <- as.matrix(tdm)
head(m)
head(m, 100)
rs <- rowsum(m)
rs <- rowSums(m)
rs <- sort(rowSums(m), decreasing=TRUE)
head(rs)
TF <- data.frame(word=names(rs), freq=rs)
View(TF)
head(m)
length(docs)
IDF <- apply(m, 2, function(s) {
return (log2(length(docs)/(sum(ifelse(s>0, 1, 0))+1)))
});
head(IDF)
IDF <- apply(m, 1, function(s) {
return (log2(length(docs)/(sum(ifelse(s>0, 1, 0))+1)))
});
head(IDF)
TF <- data.frame(word=names(m), freq=rowSums(m))
rowSums(m)
TF <- data.frame(word=names(m[, 1]), freq=rowSums(m))
fix(TF)
TF.IDF = TF*IDF
TF <- as.matrix(tdm)
head(TF)
fix(TF)
colnames(TF)
warning()
a <- warning()
a
TF.IDF = TF*IDF
fix(TF.IDF)
apply(TF.IDF, 2, function(col) {
keyword <- col[order(col, decreasing=TRUE)][1:5];
return(keyword)
})
apply(TF.IDF, 2, function(col) {
keyword <- col[order(col, decreasing=TRUE)][1:5];
return(names(keyword))
})
keywords <- apply(TF.IDF, 2, function(col) {
keyword <- col[order(col, decreasing=TRUE)][1:5];
return(names(keyword))
})
View(keywords)
keywordIndexes <- apply(TF.IDF, 2, function(col) {
index <- order(col, decreasing=TRUE)[1:5];
return(index)
})
library(tm)
library(tmcn)
library(Rwordseg)
docs <- Corpus(
DirSource(
c(
"SogouC.mini/Sample/C000007", "SogouC.mini/Sample/C000008",
"SogouC.mini/Sample/C000010", "SogouC.mini/Sample/C000013",
"SogouC.mini/Sample/C000014", "SogouC.mini/Sample/C000016",
"SogouC.mini/Sample/C000020", "SogouC.mini/Sample/C000022",
"SogouC.mini/Sample/C000023", "SogouC.mini/Sample/C000024"
)
),
readerControl = list(
language='UTF-8'
)
)
#移除空白
docs <- tm_map(docs, stripWhitespace)
#移除标点
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, content_transformer(segmentCN), returnType="tm")
tdm <- TermDocumentMatrix(
docs,
control = list(
wordLengths= c(1, 4),
stopwords = stopwordsCN()
)
)
TF <- as.matrix(tdm)
fix(TF)
IDF <- apply(m, 1, function(s) {
return (log2(length(docs)/(sum(ifelse(s>0, 1, 0))+1)))
});
TF.IDF = TF*IDF
IDF <- apply(TF, 1, function(row) {
return (log2(length(docs)/(sum(ifelse(row>0, 1, 0))+1)))
});
TF.IDF = TF*IDF
keywordIndexes <- apply(TF.IDF, 2, function(col) {
index <- order(col, decreasing=TRUE)[1:5];
return(index)
})
keywordIndexes
TF[keywordIndexes]
library(tm)
library(tmcn)
library(Rwordseg)
docs <- Corpus(
DirSource(
c(
"SogouC.mini/Sample/C000007", "SogouC.mini/Sample/C000008",
"SogouC.mini/Sample/C000010", "SogouC.mini/Sample/C000013",
"SogouC.mini/Sample/C000014", "SogouC.mini/Sample/C000016",
"SogouC.mini/Sample/C000020", "SogouC.mini/Sample/C000022",
"SogouC.mini/Sample/C000023", "SogouC.mini/Sample/C000024"
)
),
readerControl = list(
language='UTF-8'
)
)
#移除空白
docs <- tm_map(docs, stripWhitespace)
#移除标点
docs <- tm_map(docs, removePunctuation)
docs <- tm_map(docs, content_transformer(segmentCN), returnType="tm")
tdm <- TermDocumentMatrix(
docs,
control = list(
wordLengths= c(1, 4),
stopwords = stopwordsCN()
)
)
TF <- as.matrix(tdm)
IDF <- apply(TF, 1, function(row) {
return (log2(length(docs)/(sum(ifelse(row>0, 1, 0))+1)))
});
TF.IDF = TF*IDF
keywords <- apply(TF.IDF, 2, function(col) {
keyword <- col[order(col, decreasing=TRUE)][1:5];
return(names(keyword))
})
keywords
keywordIndexes <- apply(TF.IDF, 2, function(col) {
index <- order(col, decreasing=TRUE)[1:5];
return(index)
})
keywordIndexes
View(TF)
TF[keywordIndexes[, 1], 1]
IDF[keywordIndexes[, 1], 1]
IDF[[1]]
IDF
TF[keywordIndexes[, 1], 1]
TF.IDF[keywordIndexes[, 1], 1]
keywordIndexes[, 1]
TF[keywordIndexes[, 1], 1]
IDF[[1]]
IDF[[keywordIndexes[, 1]]]
IDF[keywordIndexes[, 1]]
TF.IDF[keywordIndexes[, 1], 1]
TF[keywordIndexes[, 1], 1]
keywordIndexes[, 1]
IDF[keywordIndexes[, 1]]
TF.IDF[keywordIndexes[, 1], 1]
