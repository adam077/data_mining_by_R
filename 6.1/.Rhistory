library(TSA)
install.packages('TSA')
library(TSA)
data("larain")
plot(larain)
library(TTR)
SMA(larain)
larain10 <- SMA(larain)
plot(larain, larain10)
df <- data.frame(larain, larain10)
View(df)
plot(larain, larain10)
plot(larain)
larain10 <- SMA(larain)
lines(larain10)
predict(larain10)
View(df)
tail(larain10, 1)
tail(larain10, 2)
View(df)
larain10 <- SMA(larain, n=n)
data("larain")
plot(larain)
n <- 5;
larain10 <- SMA(larain, n=n)
lines(larain10)
tail(larain10, n)/n
sum(tail(larain10, n))/n
tail(larain)
sum(tail(larain, n))/n
tail(larain)
tail(larain, n)
plot(larain)
n <- 5;
larain.10 <- SMA(larain, n=n)
lines(larain.10)
tail(larain, n)
sum(tail(larain, n))/n
plot(larain)
n <- 5;
larain.sma <- SMA(larain, n=n)
lines(larain.sma)
tail(larain, n)
p <- sum(tail(larain, n))/n
p
data("larain")
plot(larain)
n <- 5;
larain.sma <- DSMA(larain, n=n)
larain.sma.sma <- SMA(larain.sma, n=n)
larain.sma.sma
larain.sma
data("larain")
plot(larain)
n <- 5;
larain.sma <- SMA(larain, n=n)
lines(larain.sma)
tail(larain, n)
p <- sum(tail(larain, n))/n
larain.sma.sma <- SMA(larain.sma, n=n)
lines(larain.sma.sma)
p <- sum(tail(larain.sma, n))/n
p
p <- sum(tail(larain, n))/n
p
p2 <- sum(tail(larain.sma, n))/n
p2
library(forecast)
install.packages('forecast')
install.packages('forecast')
library(forecast)
larain.sma <- ses(larain, n=n)
larain.ses <- ses(larain, n=n)
lines(larain.ses)
larain.ses
larain
larain.ses <- ses(larain, h=n)
lines(larain.ses)
larain.ses
larain.ses <- ses(larain, h=n, alpha=0.1, initial="simple")
lines(larain.ses)
larain.ses
larain
install.packages("tmcn")
install.packages("tmcn", repos="http://R-forge.R-project.org")
install.packages("tmcn", type="source", repos="http://R-forge.R-project.org")
install.packages("C:/Users/manfang/AppData/Local/Temp/Rtmp8QAujs/downloaded_packages/tmcn_0.1-4.tar.gz", repos = NULL, type = "source")
install.packages("tmcn", type="source", repos="http://R-forge.R-project.org")
install.packages("tmcn", type="source", repos="http://R-forge.R-project.org")
install.packages("tmcn", type="source", repos="http://R-forge.R-project.org")
install.packages("tmcn", type="source", repos="http://R-forge.R-project.org")
install.packages("tmcn", repos="http://R-forge.R-project.org")
install.packages("tmcn", type="source")
, repos="http://R-forge.R-project.org"
install.packages("tmcn", type="source", repos="http://R-forge.R-project.org")
install.packages('Rtools')
install.packages('RTools')
install.Rtools()
library(devtools)
install.packages('devtools')
install.packages("tmcn", type="source", repos="http://R-forge.R-project.org")
install.packages("tmcn", type="source", repos="http://R-forge.R-project.org")
x <- 1:10
y <- 3*x + 1
plot(x, y)
plot(x, y, type = "l")
y <- -3*x +1
line(x, y, type = "l")
line(x, y)
lines(x, y)
par(mfrow=c(2, 2))
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y)
x <- 1:10
y <- 3*x + 1
par(mfrow=c(2, 2))
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- x^3 + 1
plot(x, y, type = "l")
y <- x^-3 + 1
plot(x, y, type = "l")
y <- x^3
plot(x, y, type = "l")
y <- x^-3
plot(x, y, type = "l")
x <- 1:10
y <- 3*x + 1
par(mfrow=c(3, 2))
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- x^3
plot(x, y, type = "l")
y <- x^-3
plot(x, y, type = "l")
x <- 0.1:10
y <- 3*x + 1
par(mfrow=c(3, 2))
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- x^
plot(x, y, type = "l")
y <- x^-3
plot(x, y, type = "l")
x <- 0.1:10
y <- 3*x + 1
par(mfrow=c(3, 2))
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- x^3
y <- x^-3
plot(x, y, type = "l")
plot(x, y, type = "l")
y <- x^(-3)
plot(x, y, type = "l")
y <- 3*x + 1
plot(x, y, type = "l")
x <- 0.1:10
par(mfrow=c(3, 2))
y <- 3*x + 1
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- x^3
plot(x, y, type = "l")
y <- x^(-3)
plot(x, y, type = "l")
y <- -x^3
plot(x, y, type = "l")
x <- 0.1:10
par(mfrow=c(3, 2))
y <- 3*x + 1
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- x^3
plot(x, y, type = "l")
y <- -x^3
plot(x, y, type = "l")
y <- 3*x^2 + 3*x + 2
plot(x, y, type = "l")
x <- -10:10
par(mfrow=c(3, 2))
y <- 3*x + 1
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- x^3
plot(x, y, type = "l")
y <- -x^3
plot(x, y, type = "l")
y <- 3*x^2 + 3*x + 2
plot(x, y, type = "l")
y <- -3*x^2 + 3*x + 2
plot(x, y, type = "l")
x <- -10:10
par(mfrow=c(3, 2))
y <- 3*x + 1
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- 3^x
plot(x, y, type = "l")
y <- -3^x
plot(x, y, type = "l")
y <- 3*x^2 + 3*x + 2
plot(x, y, type = "l")
y <- -3*x^2 + 3*x + 2
plot(x, y, type = "l")
x <- -10:10
par(mfrow=c(3, 2))
y <- 3*x + 1
plot(x, y, type = "l")
x <- -10:10
par(mfrow=c(3, 2))
y <- 3*x + 1
plot(x, y, type = "l")
y <- -3*x +1
plot(x, y, type = "l")
y <- 3^x
plot(x, y, type = "l")
y <- -3^x
plot(x, y, type = "l")
y <- 3*x^2 + 3*x + 2
plot(x, y, type = "l")
y <- -3*x^2 + 3*x + 2
plot(x, y, type = "l")
data <- read.csv("data.csv", fileEncoding="UTF8")
datas <- split(data, data$广告商)
plot(
data$销售量
)
plot(
data$销售量
)
par(mfrow=c(1, 1))
plot(
data$销售量
)
datas[[1]]$month <- 1:12
data.model <- nls(
销售量 ~ A*month + B,
start=list(A=1, B=1),
data=datas[[1]],
trace=T
)
data.model <- nls(
销售量 ~ A*month + B,
start=list(A=1, B=1),
data=datas[[1]],
trace=T
)
data.model
lines(
datas[[1]]$month,
17.36*datas[[1]]$month + 174.14
)
data.model <- nls(
销售量 ~ A^month,
start=list(A=1),
data=datas[[1]],
trace=T
)
data.model
lines(
datas[[1]]$month,
1.685^datas[[1]]$month
)
data.model <- nls(
销售量 ~ A*month^2 + B*month + C,
start=list(A=1, B=1, C=1),
data=datas[[1]],
trace=T
)
data.model
lines(
datas[[1]]$month,
-0.1469*datas[[1]]$month^2 + 19.2727*datas[[1]]$month + 169.6818
)
